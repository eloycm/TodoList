@model TodoList.Models.TodoItem

@using (Ajax.BeginForm("Edit","ToDo",new AjaxOptions() { UpdateTargetId = "ToDo", HttpMethod = "Post", },new { name = "frm",id="frm" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TodoItem</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DueDate,"{0:MM-dd-yyyy}", new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsCompleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsCompleted)
                    @Html.ValidationMessageFor(model => model.IsCompleted, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Save" class="btn btn-default" onclick="PostForm();"  />
            </div>
        </div>
    </div>
}

<div>
   <a href="#" onclick="window.parent.closeModal();">Close</a>
</div>
<script type="text/javascript">
    $(function () { // will trigger when the document is ready
        $('.datepicker').datepicker({
            format: 'mm-dd-yyyy'
        }); 
    });

    function PostForm() {
        var formData = new FormData($('#frm')[0]); // Create an arbitrary FormData instance

        $.ajax(
                {
                    url: '/Todo/Edit',
                    type: "POST",
                    async: true,
                    data: formData,
                    processData: false,
                    contentType: false
                }).done(function () {
                    window.parent.closeModal();
                });
        }

</script>
